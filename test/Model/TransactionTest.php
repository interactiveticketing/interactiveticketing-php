<?php
/**
 * TransactionTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  InteractiveTicketing
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Developer API
 *
 * Get your API Key from the [Dashboard](/dashboard/).<br/>Send all API requests with http header `X-API-Key: YOUR-API-KEY-HERE`.<br/>Base URL: `https://secure.interactiveticketing.com/developers/api/v4`<br/>Contact support@interactiveticketing.com for help.
 *
 * OpenAPI spec version: v4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.38
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace InteractiveTicketing;

/**
 * TransactionTest Class Doc Comment
 *
 * @category    Class
 * @description Transaction
 * @package     InteractiveTicketing
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class TransactionTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Transaction"
     */
    public function testTransaction()
    {
    }

    /**
     * Test attribute "transactionId"
     */
    public function testPropertyTransactionId()
    {
    }

    /**
     * Test attribute "dateTime"
     */
    public function testPropertyDateTime()
    {
    }

    /**
     * Test attribute "isRefund"
     */
    public function testPropertyIsRefund()
    {
    }

    /**
     * Test attribute "amount"
     */
    public function testPropertyAmount()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
    }

    /**
     * Test attribute "cardTransactionId"
     */
    public function testPropertyCardTransactionId()
    {
    }

    /**
     * Test attribute "cardType"
     */
    public function testPropertyCardType()
    {
    }

    /**
     * Test attribute "cardLastFour"
     */
    public function testPropertyCardLastFour()
    {
    }

    /**
     * Test attribute "cardName"
     */
    public function testPropertyCardName()
    {
    }

    /**
     * Test attribute "referenceTransactionId"
     */
    public function testPropertyReferenceTransactionId()
    {
    }

    /**
     * Test attribute "billStreet"
     */
    public function testPropertyBillStreet()
    {
    }

    /**
     * Test attribute "billCity"
     */
    public function testPropertyBillCity()
    {
    }

    /**
     * Test attribute "billStateProvince"
     */
    public function testPropertyBillStateProvince()
    {
    }

    /**
     * Test attribute "billPostalCode"
     */
    public function testPropertyBillPostalCode()
    {
    }

    /**
     * Test attribute "billCountry"
     */
    public function testPropertyBillCountry()
    {
    }

    /**
     * Test attribute "refundReason"
     */
    public function testPropertyRefundReason()
    {
    }
}
